"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[36],{3096:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"fundamentals/tab-navigation","title":"Tab Navigation","description":"A tab navigator reuses the same screen instance when navigating between screens.","source":"@site/docs/fundamentals/tab-navigation.md","sourceDirName":"fundamentals","slug":"/fundamentals/tab-navigation","permalink":"/compose-router/fundamentals/tab-navigation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Stack Navigation","permalink":"/compose-router/fundamentals/stack-navigation"},"next":{"title":"Passing Arguments","permalink":"/compose-router/fundamentals/passing-arguments"}}');var i=a(4848),s=a(8453);const r={sidebar_position:3},o="Tab Navigation",c={},l=[{value:"Back Behaviour",id:"back-behaviour",level:3},{value:"History",id:"history",level:4},{value:"Back-to-first",id:"back-to-first",level:4}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"tab-navigation",children:"Tab Navigation"})}),"\n",(0,i.jsx)(n.p,{children:"A tab navigator reuses the same screen instance when navigating between screens."}),"\n",(0,i.jsxs)(n.p,{children:["Create a tab navigator by passing ",(0,i.jsx)(n.code,{children:"NavConfig.Tab()"})," to ",(0,i.jsx)(n.code,{children:"rememberNavigator"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"val tabNavigator = rememberNavigator(NavConfig.Tab())\n"})}),"\n",(0,i.jsx)(n.h3,{id:"back-behaviour",children:"Back Behaviour"}),"\n",(0,i.jsx)(n.p,{children:"Two variants are supported:"}),"\n",(0,i.jsx)(n.h4,{id:"history",children:"History"}),"\n",(0,i.jsx)(n.p,{children:"Navigating back steps through tab history, always ending back at the first tab. A tab only exists once in the history."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"rememberNavigator(NavConfig.Tab(BackPress.Stack))\n"})}),"\n",(0,i.jsx)(n.h4,{id:"back-to-first",children:"Back-to-first"}),"\n",(0,i.jsx)(n.p,{children:"Navigating back will return to the first tab if it wasnt already selected."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"rememberNavigator(NavConfig.Tab(BackPress.First))\n"})}),"\n",(0,i.jsx)(n.p,{children:"Both variants ensure that the first screen is always the last screen to be removed."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"First tab refers to the first tab screen registered positionally in the graph"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>o});var t=a(6540);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);