"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[413],{2883:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"overview","title":"Overview","description":"Compose Router is a navigation DSL for Jetpack Compose. The project is Multiplatform, but bindings only exist for Android right now.","source":"@site/docs/overview.md","sourceDirName":".","slug":"/","permalink":"/compose-router/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"slug":"/","sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Fundamentals","permalink":"/compose-router/category/fundamentals"}}');var r=o(4848),i=o(8453);const a={slug:"/",sidebar_position:1},s="Overview",c={},l=[];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)(n.p,{children:"Compose Router is a navigation DSL for Jetpack Compose. The project is Multiplatform, but bindings only exist for Android right now."}),"\n",(0,r.jsx)(n.p,{children:"The goal of this library is to provide a simple yet flexible approach for managing navigation in Compose. It supports all of the core features you would expect from a navigation library, along with several enhancements. Noteable features include:"}),"\n",(0,r.jsxs)(n.p,{children:["Out of the box config for common navigation patterns like ",(0,r.jsx)(n.strong,{children:"Stack"})," and ",(0,r.jsx)(n.strong,{children:"Tab"})," navigation"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"val navigator = rememberNavigator(NavConfig.Tab())\n// OR\nval navigator = rememberNavigator(NavConfig.Stack)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Supports structural changes to the navigation graph at runtime:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"if (signedIn) {\n    screen<SignedIn> {\n        // ..\n    }\n} else {\n    screen<SignedOut> {\n        // ..\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Suports type-safe chained navigation across nested graphs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"navigator.navigate(SignedIn.then(Profile).then(Settings))\n"})}),"\n",(0,r.jsxs)(n.p,{children:["A full working example app demonstrating common navigation patterns can be found ",(0,r.jsx)(n.a,{href:"https://github.com/wrsx/compose-router/tree/main/samples/multiplatform",children:"here"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"This library is an experimental approach towards handling navigation in compose. It is a personal project and a work in progress, so some features may be lacking or incomplete."})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>s});var t=o(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);