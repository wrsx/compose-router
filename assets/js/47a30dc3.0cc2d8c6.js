"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[898],{9296:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"fundamentals/basic-usage","title":"Basic Usage","description":"Define a root navigator by implementing the NavigationRoot interface:","source":"@site/docs/fundamentals/basic-usage.md","sourceDirName":"fundamentals","slug":"/fundamentals/basic-usage","permalink":"/compose-router/fundamentals/basic-usage","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Fundamentals","permalink":"/compose-router/category/fundamentals"},"next":{"title":"Stack Navigation","permalink":"/compose-router/fundamentals/stack-navigation"}}');var a=t(4848),r=t(8453);const i={sidebar_position:1},s="Basic Usage",c={},l=[];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"basic-usage",children:"Basic Usage"})}),"\n",(0,a.jsxs)(n.p,{children:["Define a root navigator by implementing the ",(0,a.jsx)(n.code,{children:"NavigationRoot"})," interface:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"object Root : NavigationRoot\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Define a set of screens which belong to that navigator by using the ",(0,a.jsx)(n.code,{children:"ChildScreenOf<T>"})," interface:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"object Home : ChildScreenOf<Root>\nobject Profile : ChildScreenOf<Root>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now you can define a navigation graph. Create your root navigator with ",(0,a.jsx)(n.code,{children:"rememberNavigator<Root>()"})," and pass it to a Router. Inside the ",(0,a.jsx)(n.code,{children:"Router { .. }"})," block, define the content for each screen:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val rootNavigator = rememberNavigator<Root>()\n\nRouter(navigator) {\n    screen<Home> {\n        HomeScreen(navigator)\n    }\n\n    screen<Profile> {\n        ProfileScreen(navigator)\n    }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Navigate to a screen:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"rootNavigator.navigate(Profile)\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"Compose Router will automatically choose the first screen as your start destination"})}),"\n",(0,a.jsx)(n.p,{children:"Create a natural navigation hierarchy by nesting Routers:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val navigator = rememberNavigator<Root>()\n\nRouter(navigator) {\n    screen<Home> { .. }\n\n    screen<Profile> {\n        val profileRouter = rememberNavigator()\n\n        Router(profileRouter) {\n            screen<Settings> { .. }\n        }\n    }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Compose Router is type-safe at the graph declaration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"Router(navigator) {\n    screen<Home> { .. }\n\n    screen<Profile> { .. }\n\n    screen<Settings> {\n        // Error: Settings is not a child screen of Root\n    }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"and during navigation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"// Error: Settings is not a child screen of Root\nnavigator.navigate(Settings)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(6540);const a={},r=o.createContext(a);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);